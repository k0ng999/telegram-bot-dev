from telebot.types import (
    InlineKeyboardMarkup, InlineKeyboardButton, Message, CallbackQuery
)
from sqlalchemy import select
from models.user import SessionLocal  # —Å–µ—Å—Å–∏—è ORM
from models.user.models import Seller  # ORM-–º–æ–¥–µ–ª—å –ø—Ä–æ–¥–∞–≤—Ü–∞

MANAGER_CHAT_ID = -1002882986486

support_state = {}  # chat_id -> bool
pending_support_messages = {}  # chat_id -> —Ç–µ–∫—Å—Ç


def register(bot):
    @bot.message_handler(commands=['support'])
    def handle_support(message: Message):
        support_state[message.chat.id] = True

        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="support_cancel"))

        bot.send_message(
            message.chat.id,
            "–û–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—É:",
            reply_markup=markup
        )

    @bot.message_handler(func=lambda msg: support_state.get(msg.chat.id))
    def handle_support_text(message: Message):
        if message.text.startswith('/'):
            return  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã

        pending_support_messages[message.chat.id] = message.text.strip()

        markup = InlineKeyboardMarkup()
        markup.add(
            InlineKeyboardButton("‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å", callback_data="support_confirm"),
            InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å", callback_data="support_edit"),
        )
        markup.add(InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ", callback_data="support_cancel"))

        bot.send_message(
            message.chat.id,
            f"–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏:\n\n\"{message.text.strip()}\"\n\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É?",
            reply_markup=markup
        )

    @bot.callback_query_handler(func=lambda call: call.data.startswith("support_"))
    def handle_support_actions(call: CallbackQuery):
        chat_id = call.message.chat.id
        action = call.data.split("_")[1]

        if action == "confirm":
            user_text = pending_support_messages.get(chat_id)
            if not user_text:
                bot.answer_callback_query(call.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
                return

            telegram_id = str(call.from_user.id)

            with SessionLocal() as session:
                seller = session.execute(
                    select(Seller).where(Seller.telegram_id == telegram_id)
                ).scalar_one_or_none()

            if seller:
                support_message = (
                    f"üîî –û–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç –ø—Ä–æ–¥–∞–≤—Ü–∞:\n"
                    f"üÜî Telegram ID: {telegram_id}\n"
                    f"üë§ –ò–º—è: {seller.name}\n"
                    f"üè™ –ú–∞–≥–∞–∑–∏–Ω: {seller.shop_name}\n"
                    f"üèô –ì–æ—Ä–æ–¥: {seller.city}\n"
                    f"üè¶ –ë–∞–Ω–∫: {seller.bank_name or '‚Äî'}\n"
                    f"üí≥ –ö–∞—Ä—Ç–∞: {seller.card_number or '‚Äî'}\n"
                    f"üì© [–û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç —Å –ø—Ä–æ–¥–∞–≤—Ü–æ–º](tg://user?id={telegram_id})\n\n"
                    f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:\n{user_text}"
                )

                try:
                    bot.send_message(MANAGER_CHAT_ID, support_message, parse_mode="Markdown")
                except Exception as e:
                    print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É:", e)

                bot.edit_message_text(
                    "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É ‚úÖ –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö(–ù–ï –ó–ê–ë–£–î–¨–¢–ï –û–¢–ö–†–´–¢–¨ –õ–ò–ß–ù–´–ï –°–û–û–ë–©–ï–ù–ò–Ø!)",
                    chat_id, call.message.message_id)
            else:
                bot.send_message(chat_id, "–í—ã –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")

            support_state.pop(chat_id, None)
            pending_support_messages.pop(chat_id, None)

        elif action == "edit":
            last_text = pending_support_messages.get(chat_id, "")

            markup = InlineKeyboardMarkup()
            markup.add(
                InlineKeyboardButton(
                    text="üîÅ –í—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
                    switch_inline_query_current_chat=last_text
                )
            )
            markup.add(
                InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ", callback_data="support_cancel")
            )

            bot.edit_message_text(
                "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–º–æ–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá):",
                chat_id,
                call.message.message_id,
                reply_markup=markup
            )

            support_state[chat_id] = True

        elif action == "cancel":
            support_state.pop(chat_id, None)
            pending_support_messages.pop(chat_id, None)
            bot.edit_message_text("–û–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ ‚ùå", chat_id, call.message.message_id)
