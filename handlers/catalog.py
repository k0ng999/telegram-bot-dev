# catalog.py
from telebot import types
from models.catalog.product_search import search_products_by_article, search_products_by_name

CATALOG_URL = "https://maison-dance.ru/catalog/"


def register(bot):
    @bot.message_handler(commands=['catalog'])
    def catalog_handler(message):
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        btn_site = types.InlineKeyboardButton(text="–°–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥ –Ω–∞ —Å–∞–π—Ç–µ", url=CATALOG_URL)
        btn_quick_search = types.InlineKeyboardButton(text="–ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É/–Ω–∞–∑–≤–∞–Ω–∏—é –º–æ–¥–µ–ª–∏ –æ–±—É–≤–∏", callback_data="quick_search")

        keyboard.add(btn_site, btn_quick_search)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

    @bot.callback_query_handler(func=lambda call: call.data == "quick_search")
    def quick_search_menu(call):
        keyboard = types.InlineKeyboardMarkup(row_width=2)
        btn_by_article = types.InlineKeyboardButton(text="–ü–æ –∞—Ä—Ç–∏–∫—É–ª—É", callback_data="search_by_article")
        btn_by_name = types.InlineKeyboardButton(text="–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é", callback_data="search_by_name")

        keyboard.add(btn_by_article, btn_by_name)
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text="–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–∏—Å–∫–∞:",
            reply_markup=keyboard
        )
        bot.answer_callback_query(call.id)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º –ø–æ–∏—Å–∫–∞ –≤ –ø–∞–º—è—Ç—å
    user_search_mode = {}

    @bot.callback_query_handler(func=lambda call: call.data in ["search_by_article", "search_by_name"])
    def search_handler(call):
        user_search_mode[call.from_user.id] = call.data
        bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∞—Ä—Ç–∏–∫—É–ª:" if call.data == "search_by_article" else "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:")
        bot.answer_callback_query(call.id)

    @bot.message_handler(func=lambda message: message.from_user.id in user_search_mode)
    def handle_search_input(message):
        search_mode = user_search_mode.pop(message.from_user.id)  # <-- pop, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å —Ä–µ–∂–∏–º –ø–æ—Å–ª–µ –æ–¥–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
        search_term = message.text.strip()

        if search_mode == "search_by_article":
            results = search_products_by_article(search_term)
        else:
            results = search_products_by_name(search_term)

        if not results:
            bot.send_message(message.chat.id, "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ üòî")
        else:
            for item in results:
                image_url = item.get("image_url")

                caption = f"üì¶ <b>{item['name']}</b>\n–ê—Ä—Ç–∏–∫—É–ª: <code>{item['sku']}</code>"

                if item.get("description"):
                    caption += f"\n\nüìù {item['description']}"

                if image_url:
                    bot.send_photo(
                        message.chat.id,
                        photo=image_url,
                        caption=caption,
                        parse_mode="HTML"
                    )
                else:
                    bot.send_message(
                        message.chat.id,
                        text=caption,
                        parse_mode="HTML"
                    )

        # –ü–æ—Å–ª–µ –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –∑–∞–Ω–æ–≤–æ –≤—ã–±—Ä–∞—Ç—å —Ä–µ–∂–∏–º –ø–æ–∏—Å–∫–∞
        keyboard = types.InlineKeyboardMarkup(row_width=2)
        btn_by_article = types.InlineKeyboardButton(text="–ü–æ –∞—Ä—Ç–∏–∫—É–ª—É", callback_data="search_by_article")
        btn_by_name = types.InlineKeyboardButton(text="–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é", callback_data="search_by_name")
        keyboard.add(btn_by_article, btn_by_name)

        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–∏—Å–∫–∞:", reply_markup=keyboard)
